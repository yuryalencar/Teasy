package Teasy.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActor = createDescriptorForActor();
  /*package*/ final ConceptDescriptor myConceptBlockAction = createDescriptorForBlockAction();
  /*package*/ final ConceptDescriptor myConceptConfiguration = createDescriptorForConfiguration();
  /*package*/ final ConceptDescriptor myConceptDataForAction = createDescriptorForDataForAction();
  /*package*/ final ConceptDescriptor myConceptDeclaration = createDescriptorForDeclaration();
  /*package*/ final ConceptDescriptor myConceptDefaultElement = createDescriptorForDefaultElement();
  /*package*/ final ConceptDescriptor myConceptEquivalencePartition = createDescriptorForEquivalencePartition();
  /*package*/ final ConceptDescriptor myConceptFlow = createDescriptorForFlow();
  /*package*/ final ConceptDescriptor myConceptVerifierElement = createDescriptorForVerifierElement();
  /*package*/ final EnumerationDescriptor myEnumerationidentifier = new EnumerationDescriptor_identifier();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptActor, myConceptBlockAction, myConceptConfiguration, myConceptDataForAction, myConceptDeclaration, myConceptDefaultElement, myConceptEquivalencePartition, myConceptFlow, myConceptVerifierElement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.Actor:
        return myConceptActor;
      case LanguageConceptSwitch.BlockAction:
        return myConceptBlockAction;
      case LanguageConceptSwitch.Configuration:
        return myConceptConfiguration;
      case LanguageConceptSwitch.DataForAction:
        return myConceptDataForAction;
      case LanguageConceptSwitch.Declaration:
        return myConceptDeclaration;
      case LanguageConceptSwitch.DefaultElement:
        return myConceptDefaultElement;
      case LanguageConceptSwitch.EquivalencePartition:
        return myConceptEquivalencePartition;
      case LanguageConceptSwitch.Flow:
        return myConceptFlow;
      case LanguageConceptSwitch.VerifierElement:
        return myConceptVerifierElement;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationidentifier);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "Action", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c03L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514435");
    b.version(2);
    b.alias("Action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "Actor", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4bffL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514431");
    b.version(2);
    b.alias("Actor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "BlockAction", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c0aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514442");
    b.version(2);
    b.alias("Block Action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConfiguration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "Configuration", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4bfbL);
    b.class_(false, false, true);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514427");
    b.version(2);
    b.property("GENERATION_USE_SPECIFIED_FLOWS", 0xb2a36ad4ddb533eL).type(PrimitiveTypeId.BOOLEAN).origin("804515601402516286").done();
    b.property("GENERATION_USE_GENERATED_FLOWS", 0xb2a36ad4ddb5340L).type(PrimitiveTypeId.BOOLEAN).origin("804515601402516288").done();
    b.property("TIME_IN_MILISECONDS_FOR_PAGE_RENDERING", 0xb2a36ad4ddb5343L).type(PrimitiveTypeId.INTEGER).origin("804515601402516291").done();
    b.property("GENERATE_TEST_SCRIPTS", 0xb2a36ad4ddb5347L).type(PrimitiveTypeId.BOOLEAN).origin("804515601402516295").done();
    b.property("MAXIMUM_TEST_SCRIPTS", 0xb2a36ad4ddb534cL).type(PrimitiveTypeId.INTEGER).origin("804515601402516300").done();
    b.property("GENERATE_TEST_SEQUENCES", 0xb2a36ad4ddb5352L).type(PrimitiveTypeId.BOOLEAN).origin("804515601402516306").done();
    b.property("MAXIMUM_TEST_SEQUENCES", 0xb2a36ad4ddb5359L).type(PrimitiveTypeId.INTEGER).origin("804515601402516313").done();
    b.aggregate("ROOT_PAGE_SYSTEM", 0xb2a36ad4ddb5339L).target(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4bfcL).optional(false).ordered(true).multiple(false).origin("804515601402516281").done();
    b.aggregate("SYSTEM_ACTOR", 0xb2a36ad4ddb533bL).target(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4bffL).optional(true).ordered(true).multiple(true).origin("804515601402516283").done();
    b.alias("Configuration File");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "DataForAction", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c0dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514445");
    b.version(2);
    b.alias("Data For Action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "Declaration", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4bfcL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514428");
    b.version(2);
    b.aggregate("VERIFIER_ELEMENT", 0xb2a36ad4ddb5361L).target(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c02L).optional(false).ordered(true).multiple(true).origin("804515601402516321").done();
    b.aggregate("ACTION", 0xb2a36ad4ddb5363L).target(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c03L).optional(true).ordered(true).multiple(true).origin("804515601402516323").done();
    b.aggregate("BLOCK_ACTION", 0xb2a36ad4ddb5366L).target(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c0aL).optional(true).ordered(true).multiple(true).origin("804515601402516326").done();
    b.aggregate("DATA_FOR_ACTION", 0xb2a36ad4ddb536aL).target(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c0dL).optional(true).ordered(true).multiple(true).origin("804515601402516330").done();
    b.alias("Declaration File");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "DefaultElement", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c10L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514448");
    b.version(2);
    b.alias("Default Element");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEquivalencePartition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "EquivalencePartition", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c13L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514451");
    b.version(2);
    b.alias("Equivalence Partition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFlow() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "Flow", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c16L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514454");
    b.version(2);
    b.alias("Flow");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVerifierElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Teasy", "VerifierElement", 0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb4c02L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fa4deac7-a8d4-4bef-9b2d-db266658ed18(Teasy.structure)/804515601402514434");
    b.version(2);
    b.property("TEMPORARY_ELEMENT", 0xb2a36ad4ddb536fL).type(PrimitiveTypeId.BOOLEAN).origin("804515601402516335").done();
    b.property("TEXT_PRESENT_IN_ELEMENT", 0xb2a36ad4ddb5371L).type(PrimitiveTypeId.STRING).origin("804515601402516337").done();
    b.property("IDENTIFIER", 0xb2a36ad4ddb537dL).type(MetaIdFactory.dataTypeId(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0xb2a36ad4ddb5374L)).origin("804515601402516349").done();
    b.alias("Verifier Element");
    return b.create();
  }
}
